#!/usr/bin/env bash

echo "Application Migrator"
#
# To run just the application migrator in its own container use
# $ docker run ubuntu-16-laravel-application application-migrate
#

# Get the initial status so that it can be logged
# - Retry a few times in case we started before the database container
LIMIT=20
COUNT=0
false
while [[ $? -ne 0 ]]; do
	COUNT=$[$COUNT+1]
	if [[ $COUNT -gt $LIMIT ]]; then
		echo "Unable to get migration status after several attempts - giving up (is the database ok?)"
		exit 5
	fi
	sleep $COUNT
	php artisan --no-ansi --no-interaction migrate:status
done

# Fail on any error after this point
set -o errexit

echo ""
echo ""

# Do the migration
php artisan --no-ansi --no-interaction migrate --force
echo ""
echo ""

# Clear the cache
php artisan --no-ansi --no-interaction cache:clear
echo ""
echo ""

# Report the new status
php artisan --no-ansi --no-interaction migrate:status
echo ""
echo ""

# Run the DB Seeders if needed.
# Seeders should be idempotent as they will run on every deployment
if [ ! -z "${APP_MIGRATOR_SEED}" ]; then

	SEEDER_ARGS="--force"

	if [ ! -z "${APP_MIGRATOR_SEED_CLASS}" ]; then
		SEEDER_ARGS="${SEEDER_ARGS} --class=${APP_MIGRATOR_SEED_CLASS}"
	else
		SEEDER_ARGS="${SEEDER_ARGS} --class=DatabaseSeeder"
	fi

	if [ ! -z "${APP_MIGRATOR_SEED_CONNECTION}" ]; then
		SEEDER_ARGS="${SEEDER_ARGS} --database=${APP_MIGRATOR_SEED_CONNECTION}"
	fi

	php artisan --no-ansi --no-interaction db:seed ${SEEDER_ARGS}
	echo ""
	echo ""
fi

# Wait to be told that we need to start again
exec /init/supervisord
